#include <iostream>
#include <climits> 

using namespace std;

int main() {
    const int N = 3;
    int matrix[N][N] = {
        {3, 8, 1},
        {7, 2, 6},
        {5, 9, 4}
    };
    
    int min_side_diag = INT_MAX;
    for (int i = 0; i < N; i++) {
        int side_diag_element = matrix[i][N - 1 - i];
        if (side_diag_element < min_side_diag) {
            min_side_diag = side_diag_element;
        }
    }
    
    int row_products[N];
    for (int i = 0; i < N; i++) {
        int product = 1;
        for (int j = 0; j < N; j++) {
            product *= matrix[i][j];
        }
        row_products[i] = product;
    }
    
    cout << "Minimal element of the side diagonal: " << min_side_diag << endl;
    cout << "One-dimensional array (products of row elements): ";
    for (int i = 0; i < N; i++) {
        cout << row_products[i] << " ";
    }
    cout << endl;

    return 0;
}

